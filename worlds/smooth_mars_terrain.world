<?xml version="1.0" ?>
<sdf version="1.6">
  <world name="smooth_mars_terrain">
    <include>
      <uri>model://sun</uri>
    </include>
    
    <!-- Mars-like atmosphere -->
    <atmosphere type="adiabatic">
      <temperature>
        <kelvin>210</kelvin>
      </temperature>
      <pressure>
        <pascal>600</pascal>
      </pressure>
    </atmosphere>
    
    <!-- Mars gravity -->
    <physics name="default_physics" default="0" type="ode">
      <ode>
        <solver>
          <type>quick</type>
          <iters>150</iters>
          <sor>1.4</sor>
          <use_dynamic_moi_rescaling>1</use_dynamic_moi_rescaling>
        </solver>
        <constraints>
          <cfm>0.00001</cfm>
          <erp>0.2</erp>
          <contact_max_correcting_vel>100.0</contact_max_correcting_vel>
          <contact_surface_layer>0.001</contact_surface_layer>
        </constraints>
      </ode>
      <real_time_update_rate>1000.0</real_time_update_rate>
      <max_step_size>0.001</max_step_size>
      <real_time_factor>1</real_time_factor>
      <gravity>0 0 -3.71</gravity>
    </physics>
    
    <!-- Smooth Mars terrain -->
    <model name="mars_terrain">
      <static>true</static>
      <pose>0 0 0 0 0 0</pose>
      <link name="terrain_link">
        <collision name="terrain_collision">
          <geometry>
            <heightmap>
              <uri>file://media/heightmaps/mars_smooth_terrain.png</uri>
              <size>400 400 15</size>
              <pos>0 0 0</pos>
            </heightmap>
          </geometry>
        </collision>
        <visual name="terrain_visual">
          <geometry>
            <heightmap>
              <uri>file://media/heightmaps/mars_smooth_terrain.png</uri>
              <size>400 400 15</size>
              <pos>0 0 0</pos>
              <texture>
                <diffuse>file://media/materials/textures/mars_surface_diffuse.png</diffuse>
                <normal>file://media/materials/textures/mars_surface_normal.png</normal>
                <size>1</size>
              </texture>
              <texture>
                <diffuse>file://media/materials/textures/mars_rock_diffuse.png</diffuse>
                <normal>file://media/materials/textures/mars_rock_normal.png</normal>
                <size>1</size>
              </texture>
              <texture>
                <diffuse>file://media/materials/textures/mars_sand_diffuse.png</diffuse>
                <normal>file://media/materials/textures/mars_sand_normal.png</normal>
                <size>1</size>
              </texture>
              <blend>
                <min_height>2</min_height>
                <fade_dist>5</fade_dist>
              </blend>
            </heightmap>
          </geometry>
          <material>
            <ambient>0.2 0.2 0.2 1</ambient>
            <diffuse>0.8 0.4 0.2 1</diffuse>
            <specular>0.1 0.1 0.1 1</specular>
            <emissive>0 0 0 1</emissive>
          </material>
        </visual>
      </link>
    </model>
    
    <!-- Enhanced Mars Rover with Realistic LiDAR -->
    <model name="mars_rover">
      <pose>0 0 5 0 0 0</pose>
      <static>false</static>
      
      <!-- Main body -->
      <link name="base_link">
        <collision name="base_collision">
          <geometry>
            <box>
              <size>1.5 1.0 0.8</size>
            </box>
          </geometry>
        </collision>
        <visual name="base_visual">
          <geometry>
            <box>
              <size>1.5 1.0 0.8</size>
            </box>
          </geometry>
          <material>
            <ambient>0.3 0.3 0.3 1</ambient>
            <diffuse>0.7 0.7 0.7 1</diffuse>
          </material>
        </visual>
        <inertial>
          <mass>50</mass>
          <inertia>
            <ixx>10</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>15</iyy>
            <iyz>0</iyz>
            <izz>20</izz>
          </inertia>
        </inertial>
      </link>
      
      <!-- Realistic LiDAR Sensor (Velodyne VLP-16 style) -->
      <link name="velodyne">
        <pose>0 0 0.5 0 0 0</pose>
        <sensor name="velodyne_sensor" type="gpu_ray">
          <pose>0 0 0 0 0 0</pose>
          <visualize>true</visualize>
          <update_rate>10</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>360</samples>
                <resolution>1</resolution>
                <min_angle>-3.14159</min_angle>
                <max_angle>3.14159</max_angle>
              </horizontal>
              <vertical>
                <samples>16</samples>
                <resolution>1</resolution>
                <min_angle>-0.261799</min_angle>
                <max_angle>0.261799</max_angle>
              </vertical>
            </scan>
            <range>
              <min>0.1</min>
              <max>100</max>
              <resolution>0.01</resolution>
            </range>
          </ray>
          <plugin name="gazebo_ros_ray_sensor" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <remapping>~/out:=velodyne_points</remapping>
            </ros>
            <output_type>sensor_msgs/PointCloud2</output_type>
            <frame_name>velodyne</frame_name>
          </plugin>
        </sensor>
      </link>
      
      <!-- Camera Sensor -->
      <link name="camera_link">
        <pose>0.3 0 0.3 0 0 0</pose>
        <sensor name="camera_sensor" type="camera">
          <pose>0 0 0 0 0 0</pose>
          <visualize>true</visualize>
          <update_rate>30</update_rate>
          <camera>
            <horizontal_fov>1.047</horizontal_fov>
            <image>
              <width>1280</width>
              <height>720</height>
            </image>
            <clip>
              <near>0.1</near>
              <far>100</far>
            </clip>
          </camera>
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <ros>
              <remapping>image_raw:=camera/image_raw</remapping>
            </ros>
            <camera_name>camera</camera_name>
            <frame_name>camera_link</frame_name>
            <hack_baseline>0.07</hack_baseline>
          </plugin>
        </sensor>
      </link>
      
      <!-- IMU Sensor -->
      <link name="imu_link">
        <pose>0 0 0.2 0 0 0</pose>
        <sensor name="imu_sensor" type="imu">
          <pose>0 0 0 0 0 0</pose>
          <update_rate>100</update_rate>
          <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
            <ros>
              <remapping>~/out:=imu</remapping>
            </ros>
            <initial_orientation_as_reference>false</initial_orientation_as_reference>
          </plugin>
        </sensor>
      </link>
      
      <!-- Joints -->
      <joint name="velodyne_joint" type="fixed">
        <parent>base_link</parent>
        <child>velodyne</child>
      </joint>
      
      <joint name="camera_joint" type="fixed">
        <parent>base_link</parent>
        <child>camera_link</child>
      </joint>
      
      <joint name="imu_joint" type="fixed">
        <parent>base_link</parent>
        <child>imu_link</child>
      </joint>
    </model>
    
    <!-- Lighting -->
    <light name="mars_sun" type="directional">
      <cast_shadows>true</cast_shadows>
      <pose>0 0 10 0 0 0</pose>
      <diffuse>0.8 0.8 0.8 1</diffuse>
      <specular>0.2 0.2 0.2 1</specular>
      <attenuation>
        <range>1000</range>
        <constant>0.9</constant>
        <linear>0.01</linear>
        <quadratic>0.001</quadratic>
      </attenuation>
      <direction>-0.5 0.1 -0.9</direction>
    </light>
  </world>
</sdf>
